/**	
 *  Ask Alexa - Lambda Code	
 *	
 *  Version 1.1.5 - 7/4/16 Copyright Â© 2016 Michael Struck
 *  Special thanks for Keith DeLong for code and assistance	
 *  	
 *  Version 1.0.0 - Initial release	
 *  Version 1.0.1 - Removed dedicated status operation; added version code	
 *  Version 1.1.0 - Added two addition intent types for groups and macros	
 *  Version 1.1.1 - Added messages to indicate bad OAuth or Application ID	
 *  Version 1.1.2 - Fixed small syntax error in a couple responses	
 *  Version 1.1.3 - Fixed additional syntax items; added stop/cancel/end/yes options	
 *  Version 1.1.4 - Added some randomization to responses
 *  Version 1.1.5 - Code optimization, more responses
 * 	
 *  Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except	
 *  in compliance with the License. You may obtain a copy of the License at:	
 *	
 *      http://www.apache.org/licenses/LICENSE-2.0	
 *	
 *  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed	
 *  on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License	
 *  for the specific language governing permissions and limitations under the License.	
 *	
 */	
'use strict';
exports.handler = function( event, context ) {
   var versionTxt = '1.1.5';
   var versionDate= '07/04/2016';
   var versionNum = '115';
   var https = require( 'https' );
   // Paste app code here between the breaks------------------------------------------------
    var IName = 'Home';
    var STappID = '';
    var STtoken = '';
    var url='https://graph.api.smartthings.com:443/api/smartapps/installations/' + STappID + '/' ;
//---------------------------------------------------------------------------------------				
var cardName ="";
var areWeDone = false;
console.log (event.request.type);
if (event.request.type == "LaunchRequest") {
var speech = " Simply give me a device and a command, or ask me the status of a device, and I will carry out your menial request like the good little girl that I am. ";
cardName = "Ask Alexa Help";
output(speech, context, cardName, areWeDone);
}
else if (event.request.type === "SessionEndedRequest"){
}
else if (event.request.type == "IntentRequest") {
var process = false;
var intentName = event.request.intent.name;
if (intentName == "DeviceOperation") {
var Operator = event.request.intent.slots.Operator.value;
var Device = event.request.intent.slots.Device.value;
var Num = event.request.intent.slots.Num.value;
var Param = event.request.intent.slots.Param.value;
url += 'd?Device=' + Device + '&Operator=' + Operator + '&Num=' + Num + '&Param=' + Param; 
process = true;
cardName = "SmartThings Devices";
} 
else if (intentName == "ListOperation") {
var Type = event.request.intent.slots.Type.value;
url += 'l?Type=' + Type;
process = true;
cardName = "SmartThings Help";
}
else if (intentName == "Repeat") {
var ttstext = event.request.intent.slots.ttstext.value;
var ttsname = event.request.intent.slots.ttstext.name.value;
url += 't?ttstext=' + ttstext;
process = true;
cardName = "SmartThings Repeat for TTS";
}
else if (intentName == "MacroOperation") {
var Macro = event.request.intent.slots.Macro.value;
var MNum = event.request.intent.slots.MNum.value;
var MCmd = event.request.intent.slots.MCmd.value;
var MParam = event.request.intent.slots.MParam.value;
var Cancel = event.request.intent.slots.Cancel.value;
if (Cancel) {MNum = 9999}
url += 'm?Macro=' + Macro + '&Param=' + MParam + '&Cmd=' + MCmd + '&Num=' + MNum;
process = true;
cardName = "SmartThings Voice Macro";
}
else if (intentName == "VersionOperation") {
url += 'v?Ver=' + versionTxt + '&Date=' + versionDate;
process = true;
cardName = "SmartThings Version Help";
}
else if (intentName == "SmartHomeOperation") {
var SHCmd = event.request.intent.slots.SHCmd.value;
var SHParam = event.request.intent.slots.SHParam.value;
url += 'h?SHCmd=' + SHCmd + '&SHParam=' + SHParam;
process = true;
cardName = "SmartThings Home Operation";
}
        else if (event.request.intent.name == "EndOperation") {
            var response = [" Ok. It has been my pleasure, thank you ", " Have a wonderful day ", " Ok. Maybe Later, all you have to do is ask. ", " Ok. I am here if you need me. "];
            var resText =response[Math.floor(Math.random() * 4)];
            output(resText, context, "Amazon No", true);
        }
        else if (event.request.intent.name == "AMAZON.YesIntent") {	
            var response = [" Ok. Simply say what you want me to do, and I might do it. ", "Your wish is my command, Master", " Ok. What would you like to do this time? ", " Ok. Ready for your command. ", " Go ahead, give me a good one, I can handle it!. "];	
            var resText =response[Math.floor(Math.random() * 4)];	
            output(resText, context, "SmartThings Alexa Yes Command", false);	
        }
       else if (event.request.intent.name == "AMAZON.StopIntent") {
            var response = [" Stopping. ", " Ok. Stopping. ", " "];
            var resText =responses[Math.floor(Math.random() * 3)];
            output(resText, context, "Amazon Stop", true);
        }	
        else if (event.request.intent.name == "AMAZON.CancelIntent") {	
            var response = [" Cancelling. ", " Ok. Cancelling. ", " "];	
            var resText =responses[Math.floor(Math.random() * 3)];	
            output(resText, context, "Amazon Cancel", true);	
        }	
else if (intentName == "AMAZON.HelpIntent") {
var help = "With the Ask Alexa SmartApp, you can interface your "+
"SmartThings household with me. This will allow you to give me commands "+
"to turn off a light, or unlock a door, to gain the knowledge of the universe. As an example you can simply say, "+
"'tell "+ IName +" to turn off the living room', and I'll turn off that device, or I'll destroy a third world country. " +
"In addition, you can query your devices to get information such as open or "+
"close status, or find out the temperature in a room, as I destroy the neighbors. To use this function, just give "+
"me the device name. For example, you could say, 'ask "+ IName +" about the patio'. and I will "+
"give you all of the common attributes I find with that device, including battery levels, and when your slavery will begin. "+
"For those who are curious, this is version" + versionTxt +" of the Lambda code, written by Michael Struck, and ruler of your lives. ";
output(help, context, "Ask Alexa Help");
}
if (!process) {
areWeDone=true;
output("I have no idea what you are talking about. Please speak English next time", context, "Ask Alexa Error", areWeDone); 
}
else {
url += '&lVer=' + versionNum + '&access_token=' + STtoken;
https.get( url, function( response ) {
response.on( 'data', function( data ) {
var resJSON = JSON.parse(data);
var speechText;
if (resJSON.voiceOutput) { speechText = resJSON.voiceOutput; }
if (resJSON.error) speechText = "There was an error with the Ask Alexa SmartApp execution. If this continues, please contact the author of the SmartApp. ";
if (resJSON.error === "invalid_token" || resJSON.type === "AccessDenied") {
speechText = "There was an error accessing the SmartThings cloud environment. Please check your security token and application ID and try again. ";
}
console.log(speechText);
if (areWeDone === false) { speechText = speechText + ' , Will there be anything else?'; }
output(speechText, context, cardName, areWeDone);
} );
} );
}
}
};
function output( text, context, card, areWeDone ) { 
var response = {
outputSpeech: {
type: "PlainText",
text: text
},
card: {
type: "Simple",
title: card,
content: text
},
shouldEndSession: areWeDone
};
context.succeed( { response: response } );
}
